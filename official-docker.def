Bootstrap: docker
From: ubuntu:xenial

%runscript
exec echo "The runscript is the containers default runtime command!"

%setup
    echo "Looking in directory '$SINGULARITY_ROOTFS' for /bin/sh"
    if [ ! -x "$SINGULARITY_ROOTFS/bin/sh" ]; then
        echo "Hrmm, this container does not have /bin/sh installed..."
        exit 1
    fi

exit 0


%environment
# export PATH=/opt/salome/...
export FEELPP_REPOSITORY=/feel
export DISTENE_LICENSE_FILE=/opt/DISTENE/DLim/dlim8.key

%labels
AUTHOR christophe.trophime@lncmi.cnrs.fr

%post

# create repositories
mkdir -p /scratch /tmp /home /mnt
mkdir -p /opt/DISTENE/DLim
mkdir -p /feel

# # To add Debian/Ubuntu Lncmi repository
# apt-get update && apt-get -y install gnupg2
# gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv 535D3508
# gpg --export --armor 535D3508 | apt-key add -
# echo "deb http://euler/~trophime/debian/ xenial main" >  /etc/apt/sources.list.d/lncmi.list

# firefox-esr on Debian 
apt-get update
apt-get -y install lsb-release \
           iceweasel \
           iputils-ping net-tools \
         python-simplejson jsonlint \
         python-yaml yamllint

# apt-get install nvidia-driver nvidia-smi

# Install Salome
wget --http-user ${HTTP_USER} --http-password ${HTTP_PASSWD} \
       -O /tmp/Salome-public.run \
       "http://www.salome-platform.org/downloads/current-version/DownloadDistr?platform=UniBinNew2&version=${VERSION}_64bit"
mkdir -p /opt/
cd /opt
sh /tmp/Salome-public.run -t /opt/salome -d
rm /tmp/Salome-public.run

# # To use on Cluster with InfinyBand and Slurm
# # !!! Watch out depends on Release !!!
# apt-get -y install dapl2-utils \
#                    libdapl2 \
#                    libibverbs1 \
#                    librdmacm1 \
#                    libcxgb3-1 \
#                    libipathverbs1 \
#                    libmlx4-1 \
#                    libmlx5-1 \
#                    libmthca1 \
#                    libnes1 \
#                    libpmi0
                   
# Install Vglrun
wget https://downloads.sourceforge.net/project/virtualgl/2.5.2/virtualgl_2.5.2_amd64.deb -O /tmp/virtualgl_2.5.2_amd64.deb
apt-get -y install mesa-utils mesa-utils-extra x11-apps libxv1
# dpkg -i /tmp/virtualgl_2.5.2_amd64.deb

# Work around "ERROR: ld.so: object 'libvglfaker.so' from LD_PRELOAD cannot be preloaded: ignored."
chmod u+s /usr/lib/libvglfaker.so
chmod u+s /usr/lib/libdlfaker.so
