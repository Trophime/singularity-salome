Bootstrap: docker
From: debian:buster

%runscript
exec echo "The runscript is the containers default runtime command!"

%setup
echo "Looking in directory '$SINGULARITY_ROOTFS' for /bin/sh"
if [ ! -x "$SINGULARITY_ROOTFS/bin/sh" ]; then
   echo "Hrmm, this container does not have /bin/sh installed..."
   exit 1
fi
# prepare for MeshGems
mkdir -p $SINGULARITY_ROOTFS/opt
mkdir -p $SINGULARITY_ROOTFS/opt/DISTENE/Dlim
# get Salome custom tarball
cp //home/LNCMI-G/trophime/Salome_Packages/SALOME-8.4.0-LNCMI-MPI-DBtesting.tgz $SINGULARITY_ROOTFS/opt/
exit 0


%environment
CASROOT=/usr
LD_LIBRARY_PATH=/usr/lib/paraview:$LD_LIBRARY_PATH
PATH=/opt/SALOME-8.4.0-LNCMI-MPI-DBtesting:$PATH
export CASROOT
export LD_LIBRARY_PATH
export PATH

FEELPP_REPOSITORY=/feel
export FEELPP_REPOSITORY

%labels
AUTHOR christophe.trophime@lncmi.cnrs.fr

%post

export LANG=C
mkdir -p /feel
mkdir -p /scratch /tmp

# Add Debian/Ubuntu Lncmi repository (should check if depot is accessible)
apt-get update
apt-get -y install gnupg2  
gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv 535D3508
gpg --export --armor 535D3508 | apt-key add -
echo "deb http://euler/~trophime/debian/ buster main" >  /etc/apt/sources.list.d/lncmi.list

apt-get update
apt-get -y upgrade
apt-get -y install emacs vim nano \
   bash-completion wget curl

apt-get install -y \
   firefox-esr \
   libcos4-1 \
   omniidl omniidl-python omniorb-idl omniorb-nameserver python-omniorb python-omniorb-omg \
   paraview-python \
   netgen libnglib-5.3.1 \
   gmsh-tetgen libpastix-dev \
   libopencascade-foundation-7.2.0 libopencascade-ocaf-7.2.0 libopencascade-visualization-7.2.0 libopencascade-ocaf-7.2.0 libopencascade-ocaf-lite-7.2.0  \
   libqt5xml5 libqt5test5 libqt5sensors5 libqt5positioning5 libqt5multimediawidgets5 libqt5webengine5 libqt5webenginewidgets5 \
   libqwt-qt5-6 \
   python-sip python-pyqt5 \
   libboost-filesystem1.62.0 libboost-regex1.62.0 libboost-signals1.62.0 libboost-thread1.62.0 libboost-date-time1.62.0 libboost-chrono1.62.0 libboost-atomic1.62.0 \
   graphviz \
   valgrind \
   python-psutil 

# # Installing Graphic driver
# sed -i'.bak' 's/$/ contrib non-free/' /etc/apt/sources.list
# apt-get update
# apt-get -y install nvidia-driver nvidia-smi

# Installing VirtaulGl for noVNC
apt-get -y install mesa-utils mesa-utils-extra x11-apps libxv1
wget https://sourceforge.net/projects/virtualgl/files/2.5.2/virtualgl_2.5.2_amd64.deb/download -O /tmp/virtualgl_2.5.2_amd64.deb
dpkg -i /tmp/virtualgl_2.5.2_amd64.deb
rm -f /tmp/virtualgl_2.5.2_amd64.deb

# # Work around "ERROR: ld.so: object 'libvglfaker.so' from LD_PRELOAD cannot be preloaded: ignored."
# chmod u+s /usr/lib/libvglfaker.so
# chmod u+s /usr/lib/libdlfaker.so

# apt clean
apt -y clean

# Installing Salome
cd /opt && tar zxvf /opt/SALOME-8.4.0-LNCMI-MPI-DBtesting.tgz
rm /opt/SALOME-8.4.0-LNCMI-MPI-DBtesting.tgz

# Fix for Salome
# ln -s /usr/share/opencascade/resources/Shaders/ /usr/src

